/*
 * custom_adc.c
 *
 *  Created on: Oct 24, 2024
 *      Author: yehan
 */


#include "custom_adc.h"

uint16_t data_buffer[1000] = {1,2,3,4,5,6,7,8,9,0};

void adc3_init(){

	ADC3->SQR1=0; // Resetto il registro per cancellare modifice dell'IDE

	ADC3->SQR1 |= (0 << ADC_SQR1_L_Pos);	// Indico quanti canali leggere (0 = 1 canale)

	ADC3->SQR1 |= (0 << ADC_SQR1_SQ1_Pos);	// Inidco i canali da accendere

	ADC3->PCSEL |= ADC_PCSEL_PCSEL_0;		// Selezioni i canali da leggere

	// Tipicamente gestiti dall'IDE
//	ADC3->CR &= ~ADC_CR_DEEPPWD;
//	ADC3->CR |= ADC_CR_ADVREGEN;
//	while((ADC3->ISR & ADC_ISR_LDORDY) != 1){}

	/* Fase di calibrazione */
	ADC3->CR &= ~ADC_CR_ADCALDIF;   // Imposto misura single read;
	ADC3->CR |= ADC_CR_ADCALLIN;	// Calibrazione Lineare con offset
	ADC3->CR &= ~ADC_CR_ADEN;		// Occorre ADC spento
	ADC3->CR |= ADC_CR_ADCAL;		// Inizio calibrazione

	while((ADC3->CR & ADC_CR_ADCAL) != 0){};
	/* Fine fase di calibrazione */

	/* Accensione ADC */
	ADC3->ISR |= ADC_ISR_ADRDY;		// Azzero il bit prima del controllo
	ADC3->CR |= ADC_CR_ADEN;		// Abilito l'ADC

	while((ADC3->ISR & ADC_ISR_ADRDY) != 0){}	// Aspetto che il flag cambi

	ADC3->ISR |= ADC_ISR_ADRDY;		// Azzero il Ready bit
	/* Fine istruzioni per l'accensione */


	ADC3_COMMON->CCR |= 0x1 << ADC_CCR_PRESC_Pos; // Imposto un prescaler per il clock in modo da aver misure piÃ¹ precise di temperatura

	/*  */
	TIM6->PSC = 48;
	TIM6->ARR = 1;
	TIM6->CNT = 0;
	TIM6->DIER |= TIM_DIER_UIE;
	TIM6->CR1 |= TIM_CR1_CEN;

	ADC3->IER |= ADC_IER_EOCIE;					// Abilito l'interrupt di fine conversione
	ADC3->CR  |= ADC_CR_ADSTART;				// Inizio le misurazioni


}
